<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


	<!-- 
		 - 스피링이 클래스를 검색할 패키지를 지정
		 - 해당 패키지에서 @Component 어노테이션이(또는 하위 어노테이션) 적용된 클래스를 검색하여 빈으로 자동드록 된다. 따ㅏ라서 XML 설정 파일에 다양한 빈 정보를 추가히지 않아도 됨.
	 -->
	<context:component-scan base-package="com.hhi.wiart" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean id="loggerInterceptor" class="com.hhi.wiart.common.logger.LoggerInterceptor"></bean>
		</mvc:interceptor>

        <!-- 로그인 체크가 필요한 URL과 로그인 여부를 체크해준다 -->
        <mvc:interceptor>
            <!-- 모든 URL 요청 mvc 인터셉터를 거치게 하도록 정의 -->
            <!-- <mvc:mapping path="/**/*"/> -->
            <!-- <mvc:mapping path="/cop/bbs/*Master*.do"/>-->
            <mvc:mapping path="/notice/*"/>
            <mvc:mapping path="/company/*"/>
            <mvc:mapping path="/portfolio/*"/>
            
            <!--mvc 인터셉터를 거치지 않고 예외 시킬 URL 요청들 정의 -->
            <mvc:exclude-mapping path="/main/*.do"/>
            
            <!--mvc 인터셉터 컨트롤러 빈객체 정의 -->
            <bean class="com.hhi.wiart.common.interceptor.AuthenticInterceptor" />
        </mvc:interceptor>
	</mvc:interceptors>
	
	<!--
		어노테이션을 이용하여 컨트롤러를 구현할 때 요청 URL을 매핑
		@RequestMapping을 처리한다.
	-->
	 <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" p:alwaysUseFullPath="true"/>
	 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" p:alwaysUseFullPath="true"/>
	

    <!-- BeanNameViewResolver : 컨트롤러에서 리턴 받은 뷰의 이름과 빈에 등록 되어 있는 id의 값이 같은것을 찾아 실행 시킨다. -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>

    <!-- Json 사용 -->
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
<!--     
    <bean
    	class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1" 
    	p:viewClass="org.springframework.web.servlet.view.JstlView" 
    	p:prefix="/WEB-INF/views/" p:suffix=".jsp">
   	</bean>
-->
   	<!-- 정적자원 매핑 -->
   	<mvc:resources mapping="/resources/**" location="/resources/" />
    <mvc:resources mapping="/styles/**" location="/styles/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/SEeditor/**" location="/SEeditor/" />
    <mvc:resources mapping="/editor/**" location="/editor/" />
    <!-- 
	<mvc:resources mapping="/bower_components/**" location="/resources/bower_components/"/>
	<mvc:resources mapping="/plugins/**" location="/resources/plugins/"/>
	<mvc:resources mapping="/dist/**" location="/resources/dist/"/>    
     -->
    
    <!-- InternalResourceViewResolver : 컨트롤러 단에서 리턴받은 view경로에서 앞은 prefix 뒤는 suffix가 더해진 후 해당 경로의 jsp파일을 찾는다! -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/views/"/>
      <property name="suffix" value=".jsp"/>
    </bean>
	    
	<!--파일 업로드 MultipartResolver 설정-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize" value="10485760"/>
	</bean>
	<!-- <mvc:default-servlet-handler/> -->
	<!-- 어노테이션 인식 -->
	<mvc:annotation-driven/>
</beans>