<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 
		 - 스피링이 클래스를 검색할 패키지를 지정
		 - 해당 패키지에서 @Component 어노테이션이(또는 하위 어노테이션) 적용된 클래스를 검색하여 빈으로 자동드록 된다. 따ㅏ라서 XML 설정 파일에 다양한 빈 정보를 추가히지 않아도 됨.
	 -->
	<context:component-scan base-package="com.hhi.wiart" ></context:component-scan>

	<!--
		어노테이션을 이용하여 컨트롤러를 구현할 때 요청 URL을 매핑
		@RequestMapping을 처리한다.
	-->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" p:alwaysUseFullPath="true"/>
    
    <!-- BeanNameViewResolver : 컨트롤러에서 리턴 받은 뷰의 이름과 빈에 등록 되어 있는 id의 값이 같은것을 찾아 실행 시킨다. -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>

    <!-- Json 사용 -->
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
    
    <bean
    	class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1" 
    	p:viewClass="org.springframework.web.servlet.view.JstlView" 
    	p:prefix="/WEB-INF/views/" p:suffix=".jsp">
   	</bean>
    
    <!-- InternalResourceViewResolver : 컨트롤러 단에서 리턴받은 view경로에서 앞은 prefix 뒤는 suffix가 더해진 후 해당 경로의 jsp파일을 찾는다! -->
  <!--   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/views/"/>
      <property name="suffix" value=".jsp"/>
    </bean> -->
    
 <!--    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />    
    
    <bean
    	class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1" 
    	p:viewClass="org.springframework.web.servlet.view.JstlView" 
    	p:prefix="/WEB-INF/jsp/" p:suffix=".jsp">
   	</bean> -->

	<mvc:annotation-driven/>
</beans>